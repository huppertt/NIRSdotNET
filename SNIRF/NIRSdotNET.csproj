<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\NuGet.Build.Packaging.0.2.5-dev.8\build\NuGet.Build.Packaging.props" Condition="Exists('..\packages\NuGet.Build.Packaging.0.2.5-dev.8\build\NuGet.Build.Packaging.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{66CEE40B-4A70-4432-A819-AA5C63994685}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>SNIRF</RootNamespace>
    <AssemblyName>SNIRF</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <ReleaseVersion>1.0</ReleaseVersion>
    <PackageVersion>0.0.0.1</PackageVersion>
    <Authors>Theodore Huppert</Authors>
    <Copyright>2020</Copyright>
    <Owners>Theodore Huppert</Owners>
    <Summary>This is a specialized toolbox for loading fNIRS brain data into .net</Summary>
    <Title>NIRSdotNET</Title>
    <Description>This is a specialized scientific toolset for import/export and visualization of functional near-infrared spectroscopy (fNIRS) brain imaging</Description>
    <PackageProjectUrl>www.github.com/huppertt/NIRSdotNET</PackageProjectUrl>
    <PackageId>NIRSdotNET</PackageId>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <DefineConstants>
    </DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>true</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'Default' ">
    <StartAction>Project</StartAction>
    <TargetRuntimeId>
    </TargetRuntimeId>
    <MonoArchitecture>Default</MonoArchitecture>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="gdk-sharp, Version=2.12.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
    <Reference Include="System.Xml" />
    <Reference Include="zlib.net">
      <HintPath>..\packages\zlib.net.1.0.4.0\lib\zlib.net.dll</HintPath>
    </Reference>
    <Reference Include="MathNet.Numerics">
      <HintPath>..\packages\MathNet.Numerics.5.0.0\lib\net48\MathNet.Numerics.dll</HintPath>
    </Reference>
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="MonoGame.Framework">
      <HintPath>..\packages\MonoGame.Framework.Portable.3.7.1.189\lib\portable-net45+win8+wpa81\MonoGame.Framework.dll</HintPath>
    </Reference>
    <Reference Include="gtk-sharp, Version=2.12.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
    <Reference Include="glib-sharp, Version=2.12.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
    <Reference Include="pango-sharp, Version=2.12.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f" />
    <Reference Include="csmatio">
      <HintPath>..\packages\csmatio.1.0.20\lib\netstandard2.0\csmatio.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="io_DOTnirs.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="CData.cs" />
    <Compile Include="Definitions.cs" />
    <Compile Include="CProbe.cs" />
    <Compile Include="io_SNIRF.cs">
      <IncludeInPackage>true</IncludeInPackage>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="DefinitionsSNIRF.cs" />
    <Compile Include="io_NIRx.cs" />
    <Compile Include="io_SNIRF_Read.cs" />
    <Compile Include="io_loadProbe.cs" />
    <Compile Include="GetSpectrum.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
    <Compile Include="io_SNIRF_info.cs" />
    <Compile Include="io_SNIRF_Validate.cs" />
    <Compile Include="CSession.cs" />
    <Compile Include="CPipeline.cs" />
    <Compile Include="Cmodules.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="pts1020.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="DefaultConfig.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="HemoglobinSpectrum.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\HDF.PInvoke\HDF.PInvoke.csproj">
      <Project>{4450f800-93e2-4d4a-b224-966e2338cded}</Project>
      <Name>HDF.PInvoke</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="..\packages\NuGet.Build.Packaging.0.2.5-dev.8\build\NuGet.Build.Packaging.targets" Condition="Exists('..\packages\NuGet.Build.Packaging.0.2.5-dev.8\build\NuGet.Build.Packaging.targets')" />
  <Import Project="..\packages\HDF.PInvoke.1.10.6.1\build\HDF.PInvoke.targets" Condition="Exists('..\packages\HDF.PInvoke.1.10.6.1\build\HDF.PInvoke.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\HDF.PInvoke.1.10.6.1\build\HDF.PInvoke.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\HDF.PInvoke.1.10.6.1\build\HDF.PInvoke.targets'))" />
  </Target>
</Project>